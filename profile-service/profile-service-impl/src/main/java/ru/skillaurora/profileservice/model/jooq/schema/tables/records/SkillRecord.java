/*
 * This file is generated by jOOQ.
 */
package ru.skillaurora.profileservice.model.jooq.schema.tables.records;


import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

import ru.skillaurora.profileservice.model.jooq.schema.tables.Skill;
import ru.skillaurora.profileservice.model.jooq.schema.tables.pojos.SkillEntity;


/**
 * Таблица навыков пользователя
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SkillRecord extends TableRecordImpl<SkillRecord> implements Record2<UUID, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.skill.user_id</code>.
     */
    public void setUserId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.skill.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.skill.tag_id</code>.
     */
    public void setTagId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.skill.tag_id</code>.
     */
    public Long getTagId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Skill.SKILL_ENTITY.USER_ID;
    }

    @Override
    public Field<Long> field2() {
        return Skill.SKILL_ENTITY.TAG_ID;
    }

    @Override
    public UUID component1() {
        return getUserId();
    }

    @Override
    public Long component2() {
        return getTagId();
    }

    @Override
    public UUID value1() {
        return getUserId();
    }

    @Override
    public Long value2() {
        return getTagId();
    }

    @Override
    public SkillRecord value1(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public SkillRecord value2(Long value) {
        setTagId(value);
        return this;
    }

    @Override
    public SkillRecord values(UUID value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SkillRecord
     */
    public SkillRecord() {
        super(Skill.SKILL_ENTITY);
    }

    /**
     * Create a detached, initialised SkillRecord
     */
    public SkillRecord(UUID userId, Long tagId) {
        super(Skill.SKILL_ENTITY);

        setUserId(userId);
        setTagId(tagId);
    }

    /**
     * Create a detached, initialised SkillRecord
     */
    public SkillRecord(SkillEntity value) {
        super(Skill.SKILL_ENTITY);

        if (value != null) {
            setUserId(value.getUserId());
            setTagId(value.getTagId());
        }
    }
}
