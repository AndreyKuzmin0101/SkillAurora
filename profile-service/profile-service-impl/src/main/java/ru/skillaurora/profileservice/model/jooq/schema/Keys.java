/*
 * This file is generated by jOOQ.
 */
package ru.skillaurora.profileservice.model.jooq.schema;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import ru.skillaurora.profileservice.model.jooq.schema.tables.Country;
import ru.skillaurora.profileservice.model.jooq.schema.tables.ProfileInfo;
import ru.skillaurora.profileservice.model.jooq.schema.tables.Skill;
import ru.skillaurora.profileservice.model.jooq.schema.tables.records.CountryRecord;
import ru.skillaurora.profileservice.model.jooq.schema.tables.records.ProfileInfoRecord;
import ru.skillaurora.profileservice.model.jooq.schema.tables.records.SkillRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CountryRecord> COUNTRY_CODE_KEY = Internal.createUniqueKey(Country.COUNTRY_ENTITY, DSL.name("country_code_key"), new TableField[] { Country.COUNTRY_ENTITY.CODE }, true);
    public static final UniqueKey<CountryRecord> COUNTRY_NAME_KEY = Internal.createUniqueKey(Country.COUNTRY_ENTITY, DSL.name("country_name_key"), new TableField[] { Country.COUNTRY_ENTITY.NAME }, true);
    public static final UniqueKey<CountryRecord> COUNTRY_PKEY = Internal.createUniqueKey(Country.COUNTRY_ENTITY, DSL.name("country_pkey"), new TableField[] { Country.COUNTRY_ENTITY.ID }, true);
    public static final UniqueKey<ProfileInfoRecord> PROFILE_INFO_PKEY = Internal.createUniqueKey(ProfileInfo.PROFILE_INFO_ENTITY, DSL.name("profile_info_pkey"), new TableField[] { ProfileInfo.PROFILE_INFO_ENTITY.ID }, true);
    public static final UniqueKey<ProfileInfoRecord> PROFILE_INFO_USERNAME_KEY = Internal.createUniqueKey(ProfileInfo.PROFILE_INFO_ENTITY, DSL.name("profile_info_username_key"), new TableField[] { ProfileInfo.PROFILE_INFO_ENTITY.USERNAME }, true);
    public static final UniqueKey<SkillRecord> SKILL_UNIQ = Internal.createUniqueKey(Skill.SKILL_ENTITY, DSL.name("skill_uniq"), new TableField[] { Skill.SKILL_ENTITY.USER_ID, Skill.SKILL_ENTITY.TAG_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ProfileInfoRecord, CountryRecord> PROFILE_INFO__PROFILE_INFO_COUNTRY_ID_FKEY = Internal.createForeignKey(ProfileInfo.PROFILE_INFO_ENTITY, DSL.name("profile_info_country_id_fkey"), new TableField[] { ProfileInfo.PROFILE_INFO_ENTITY.COUNTRY_ID }, Keys.COUNTRY_PKEY, new TableField[] { Country.COUNTRY_ENTITY.ID }, true);
    public static final ForeignKey<SkillRecord, ProfileInfoRecord> SKILL__SKILL_USER_ID_FKEY = Internal.createForeignKey(Skill.SKILL_ENTITY, DSL.name("skill_user_id_fkey"), new TableField[] { Skill.SKILL_ENTITY.USER_ID }, Keys.PROFILE_INFO_PKEY, new TableField[] { ProfileInfo.PROFILE_INFO_ENTITY.ID }, true);
}
